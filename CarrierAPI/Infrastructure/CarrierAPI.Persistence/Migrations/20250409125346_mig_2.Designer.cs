// <auto-generated />
using System;
using CarrierAPI.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarrierAPI.Persistence.Migrations
{
    [DbContext(typeof(CarrierAPIContext))]
    [Migration("20250409125346_mig_2")]
    partial class mig_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarrierAPI.Domain.Entities.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CarrierPlusDesiCost")
                        .HasColumnType("integer");

                    b.Property<bool>("CarriersActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("CarrierAPI.Domain.Entities.CarrierConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CarrierCost")
                        .HasColumnType("numeric");

                    b.Property<int>("CarrierId")
                        .HasColumnType("integer");

                    b.Property<int>("CarrierMaxDesi")
                        .HasColumnType("integer");

                    b.Property<int>("CarrierMinDesi")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.ToTable("CarrierConfigurations");
                });

            modelBuilder.Entity("CarrierAPI.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarrierId")
                        .HasColumnType("integer");

                    b.Property<decimal>("OrderCarrierCost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OrderDesi")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CarrierAPI.Domain.Entities.CarrierConfiguration", b =>
                {
                    b.HasOne("CarrierAPI.Domain.Entities.Carrier", "Carrier")
                        .WithMany("CarrierConfigurations")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("CarrierAPI.Domain.Entities.Order", b =>
                {
                    b.HasOne("CarrierAPI.Domain.Entities.Carrier", null)
                        .WithMany("Orders")
                        .HasForeignKey("CarrierId");
                });

            modelBuilder.Entity("CarrierAPI.Domain.Entities.Carrier", b =>
                {
                    b.Navigation("CarrierConfigurations");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
